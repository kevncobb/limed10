/**!
 * trunk8 v1.3.2
 * https://github.com/rviscomi/trunk8
 *
 * Copyright 2012 Rick Viscomi
 * Released under the MIT License.
 *
 * Date: October 21, 2012
 */
!function(a){function f(b){this.$element=a(b),this.original_text=a.trim(this.$element.html()),this.settings=a.extend({},a.fn.trunk8.defaults)}function g(a){var b=document.createElement("DIV");return b.innerHTML=a,"undefined"!=typeof b.textContent?b.textContent:b.innerText}function h(a){if(g(a)===a)return a.split(/\s/g);for(var e,f,b=[],c=/<([a-z]+)([^<]*)(?:>([\S\s]*?(?!<\1>))<\/\1>|\s+\/>)(['.?!,]*)|((?:[^<>\s])+['.?!,]*\w?|<br\s?\/?>)/gi,d=c.exec(a);d&&e!==c.lastIndex;)e=c.lastIndex,d[5]?b.push(d[5]):d[1]&&b.push({tag:d[1],attribs:d[2],content:d[3],after:d[4]}),d=c.exec(a);for(f=0;f<b.length;f++)"string"!=typeof b[f]&&b[f].content&&(b[f].content=h(b[f].content));return b}function i(b,c,d){b=b.replace(d,"");var e=function(c,f){var h,i,j,l,g="";for(l=0;l<c.length;l++)h=c[l],j=a.trim(b).split(" ").length,a.trim(b).length&&("string"==typeof h?(/<br\s*\/?>/i.test(h)||(1===j&&a.trim(b).length<=h.length?(h=b,("p"===f||"div"===f)&&(h+=d),b=""):b=b.replace(h,"")),g+=a.trim(h)+(l===c.length-1||1>=j?"":" ")):(i=e(h.content,h.tag),h.after&&(b=b.replace(h.after,"")),i&&(h.after||(h.after=" "),g+="<"+h.tag+h.attribs+">"+i+"</"+h.tag+">"+h.after)));return g},f=e(c);return f.slice(f.length-d.length)!==d&&(f+=d),f}function j(){var q,r,s,t,u,v,b=this.data("trunk8"),d=b.settings,f=d.width,j=d.side,k=d.fill,l=d.parseHTML,m=c.getLineHeight(this)*d.lines,n=b.original_text,o=n.length,p="";if(this.html(n),u=this.text(),l&&g(n)!==n&&(v=h(n),n=g(n),o=n.length),f===e.auto){if(this.height()<=m)return;for(q=0,r=o-1;r>=q;)s=q+(r-q>>1),t=c.eatStr(n,j,o-s,k),l&&v&&(t=i(t,v,k)),this.html(t),this.height()>m?r=s-1:(q=s+1,p=p.length>t.length?p:t);this.html(""),this.html(p),d.tooltip&&this.attr("title",u)}else{if(isNaN(f))return void a.error('Invalid width "'+f+'".');s=o-f,t=c.eatStr(n,j,s,k),this.html(t),d.tooltip&&this.attr("title",n)}d.onTruncate()}var b,c,d={center:"center",left:"left",right:"right"},e={auto:"auto"};f.prototype.updateSettings=function(b){this.settings=a.extend(this.settings,b)},b={init:function(b){return this.each(function(){var c=a(this),d=c.data("trunk8");d||c.data("trunk8",d=new f(this)),d.updateSettings(b),j.call(c)})},update:function(b){return this.each(function(){var c=a(this);b&&(c.data("trunk8").original_text=b),j.call(c)})},revert:function(){return this.each(function(){var b=a(this).data("trunk8").original_text;a(this).html(b)})},getSettings:function(){return a(this.get(0)).data("trunk8").settings}},c={eatStr:function(b,e,f,g){var j,k,h=b.length,i=c.eatStr.generateKey.apply(null,arguments);if(c.eatStr.cache[i])return c.eatStr.cache[i];if(("string"!=typeof b||0===h)&&a.error('Invalid source string "'+b+'".'),0>f||f>h)a.error('Invalid bite size "'+f+'".');else if(0===f)return b;switch("string"!=typeof(g+"")&&a.error("Fill unable to be converted to a string."),e){case d.right:return c.eatStr.cache[i]=a.trim(b.substr(0,h-f))+g;case d.left:return c.eatStr.cache[i]=g+a.trim(b.substr(f));case d.center:return j=h>>1,k=f>>1,c.eatStr.cache[i]=a.trim(c.eatStr(b.substr(0,h-j),d.right,f-k,""))+g+a.trim(c.eatStr(b.substr(h-j),d.left,k,""));default:a.error('Invalid side "'+e+'".')}},getLineHeight:function(b){var c=a(b).css("float");"none"!==c&&a(b).css("float","none");var d=a(b).css("position");"absolute"===d&&a(b).css("position","static");var g,e=a(b).html(),f="line-height-test";return a(b).html("i").wrap('<div id="'+f+'" />'),g=a("#"+f).innerHeight(),a(b).html(e).css({"float":c,position:d}).unwrap(),g}},c.eatStr.cache={},c.eatStr.generateKey=function(){return Array.prototype.join.call(arguments,"")},a.fn.trunk8=function(c){return b[c]?b[c].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof c&&c?void a.error("Method "+c+" does not exist on jQuery.trunk8"):b.init.apply(this,arguments)},a.fn.trunk8.defaults={fill:"&hellip;",lines:1,side:d.right,tooltip:!0,width:e.auto,parseHTML:!1,onTruncate:function(){}}}(jQuery);
(function ($, Drupal) {

  /**
   * Use this behavior as a template for custom Javascript.
   */

  Drupal.behaviors.trunk = {
    attach: function (context, settings) {
      // Using once() to apply the myCustomBehaviour effect when you want to do just run one function.
      $(context).find('div.trunk').trunk8({
        fill: '&hellip;',
        lines: 6
      });
    }
  };

})(jQuery, Drupal);
