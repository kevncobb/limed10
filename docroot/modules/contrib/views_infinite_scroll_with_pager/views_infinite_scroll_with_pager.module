<?php

/**
 * @file
 * Module file for views_infinite_scroll.
 */

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_views_infinite_scroll_with_pager().
 */
function views_infinite_scroll_with_pager_preprocess_views_infinite_scroll_with_pager(&$vars) {
  // The important parts we needed lifted wholesale from
  // template_preprocess_views_mini_pager().
  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');
  $element = $vars['element'];
  $parameters = $vars['parameters'];
  $pager = $pager_manager->getPager($element);
  $options = [];

  $current = $pager->getCurrentPage();
  $max = $pager->getTotalPages() - 1;
  $quantity = (int) $vars['quantity'];

  $vars['current'] = $current;
  if (isset($pager) && $current < $max) {
    $options['query'] = $pager_manager->getUpdatedParameters($parameters, $element, $current + 1);
    $options['query']['next'] = TRUE;
    $vars['items']['more']['href'] = Url::fromRoute('<none>', [], $options);
    unset($options['query']['next']);
  }

  // Set current element in pager
  views_infinite_scroll_with_pager_build_item_page($vars,$parameters,$element,$current);
  $offset = 1;
  $done = 1;

  // Place current element in the middle of pager if possible
  while ($done < $quantity) {
    if ($current+$offset <= $max) {
      views_infinite_scroll_with_pager_build_item_page($vars,$parameters,$element,$current+$offset);
      $done++;
    }
    if ($current-$offset >= 0 && $done < $quantity) {
      views_infinite_scroll_with_pager_build_item_page($vars,$parameters,$element,$current-$offset);
      $done++;
    }
    $offset++;
  }
  ksort($vars['items']['pages']);

  // Set First, previous, next and last element
  if ($current > 0) {
    views_infinite_scroll_with_pager_build_item($vars,$parameters,$element,0,'first');
    views_infinite_scroll_with_pager_build_item($vars,$parameters,$element,$current-1,'previous');
  }
  if ($current < $max) {
    views_infinite_scroll_with_pager_build_item($vars,$parameters,$element,$current+1,'next');
    views_infinite_scroll_with_pager_build_item($vars,$parameters,$element,$max,'last');
  }

  if (!empty($vars['tags']['user_friendly_keys'])) {
    $vars['current']++;
  }

  $vars['#cache']['contexts'][] = 'url.query_args';
  $vars['attributes'] = new Attribute([
    'class' => ['js-pager__items', 'pager'],
    'data-drupal-views-infinite-scroll-pager' => $vars['options']['automatically_load_content'] ? 'automatic' : TRUE,
  ]);
  $vars['pager_attributes'] = new Attribute([
    'data-drupal-views-infinite-scroll-numeric-pager' => TRUE
  ]);
}

function views_infinite_scroll_with_pager_build_item_page(&$vars,$parameters,$element,$index) {
  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');
  $options['query'] = $pager_manager->getUpdatedParameters($parameters, $element, $index);
  unset($options['query']['next']);
  if (!empty($vars['tags']['user_friendly_keys'])) {
    $index++;
  }
  $vars['items']['pages'][$index]['href'] = Url::fromRoute('<none>', [], $options);
}

function views_infinite_scroll_with_pager_build_item(&$vars,$parameters,$element,$index,$name) {
  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');
  $options['query'] = $pager_manager->getUpdatedParameters($parameters, $element, $index);
  unset($options['query']['next']);
  $vars['items'][$name] = [
    'href' => Url::fromRoute('<none>', [], $options),
    'text' => $vars['tags'][$name],
  ];
}
