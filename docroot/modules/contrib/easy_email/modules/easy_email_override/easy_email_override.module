<?php

/**
 * @file
 * Contains easy_email_override.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function easy_email_override_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.easy_email_override') {
    $readme_file = file_exists(__DIR__ . '/README.md') ? __DIR__ . '/README.md' : __DIR__ . '/README.txt';
    if (!file_exists($readme_file)) {
      return NULL;
    }
    $text = file_get_contents($readme_file);
    if ($text && !\Drupal::moduleHandler()->moduleExists('markdown')) {
      return '<pre>' . $text . '</pre>';
    }
    else {
      // Use the Markdown filter to render the README.
      $filter_manager = \Drupal::service('plugin.manager.filter');
      $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
      $config = ['settings' => $settings];
      $filter = $filter_manager->createInstance('markdown', $config);
      return $filter->process($text, 'en');
    }
  }
  return NULL;
}

/**
 * Implements hook_mail_alter().
 */
function easy_email_override_mail_alter(&$message) {
  if (!empty($message['module']) && !empty($message['key'])) {
    /** @var \Drupal\easy_email_override\Entity\EmailOverrideInterface[] $email_overrides */
    $email_overrides = \Drupal::entityTypeManager()
      ->getStorage('easy_email_override')
      ->loadByProperties([
        'module' => $message['module'],
        'key' => $message['key']
      ]);
    if (!empty($email_overrides)) {
      /** @var \Drupal\easy_email\Service\EmailHandlerInterface $email_handler */
      $email_handler = \Drupal::service('easy_email.handler');
      // If we find more than one override for a given module/key combo, we'll send them all.
      // Not sure if that will be useful, but perhaps.
      foreach ($email_overrides as $email_override) {
        $email = $email_handler->createEmail([
          'type' => $email_override->getEasyEmailType(),
        ]);
        $param_map = $email_override->getParamMap();
        foreach ($param_map as $pm) {
          $email->set($pm['destination'], $message['params'][$pm['source']]);
        }
        $email_handler->sendEmail($email);
      }
      $message['send'] = FALSE;
    }
  }
}
